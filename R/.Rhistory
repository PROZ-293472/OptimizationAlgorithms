mydataframe <- data.frame(a=c(1,2),b=c(2,3))
View(mydataframe)
mydataframe <- data.frame(a=c(1,2),b=c(2,3))
mymatrix <- as.matrix(mydataframe)
dupa = Matrix.read('../dat.csv', expected.columns = NULL)
install.packages(Matrix)
install.packages("Matrix")
brary(Matrix)
dupa = Matrix.read('../dat.csv', expected.columns = NULL)
library(Matrix)
dupa = Matrix.read('../dat.csv', expected.columns = NULL)
library(Matrix)
dupa = Matrix.read('../dat.csv', expected.columns = NULL)
library(Matrix)
dupa = Matrix.read('../data.csv', expected.columns = NULL)
dat <- read.csv("../data.csv", row.names=NULL)
dat <- read.csv("data.csv", row.names=NULL)
cd src
setwd("src")
dat <- read.csv("data.csv", row.names=NULL)
View(dat)
dat <- read.csv("data.csv", row.names=0)
dat <- read.csv("data.csv", row.names=0)
dat <- read.csv("data.csv", header = FALSE)
View(dat)
dat <- read.csv("data.csv", header = FALSE)
dat = as.matrix(dat)
View(dat)
View(mymatrix)
View(mydataframe)
View(dat)
class(dat)
setwd("algorithms")
dat <- read.csv("../data.csv", header = FALSE)
dat = as.matrix(dat)
class(dat)
range(100)
range(1:100)
range(1:1:100)
P0 <- read.csv("../data.csv", header = FALSE)
P0 = as.matrix(dat)
dim(P0)
dim(P0)[1]
P0[1]
P0[1][:]
P0[1,:]
mi <- dim(P0)[1]
indexes <- sample(1:mi, 3, replace=T)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
indexes <- sample(1:mi, 3, replace=F)
View(P0)
View(P0)
indexes <- sample(1:mi, 3, replace=F)
P0[1,]
P <- read.csv("../data.csv", header = FALSE)
P <- as.matrix(dat)
r <- P[indexes[1],]
r <- P[indexes[1],]
d_e <- P[indexes[2:3],]
View(d_e)
f <- 0.5
M < r + f*(d_e[2] - d_e[1])
M <- r + f*(d_e[2] - d_e[1])
a <- runif(1, 0, 1)
P <- read.csv("../data.csv", header = FALSE)
P <- as.matrix(dat)
H <- P0
mi <- dim(P0)[1]
t <- 0
f <- 0.5
cr = 0.5
sum_of_squares<-function(point){
sum <- 0.0
for(p in point)
{
sum <- sum + p^2
}
return(sum)
}
crossover <- function(x,y){
z <- vector()
for (i in 1:dim(x)){
a <- runif(1, 0, 1)
if (a < cr)
append(z, y[i])
else
append(z, x[i])
}
return(z)
}
tournanemt <- function(x,y)
{
cond <- sum_of_squares(x) > sum_of_squares(y)
if(cond)
return(y)
else
return(x)
}
while(t != 100)
{
next_P <- P
for (i in 1:mi)
{
indexes <- sample(1:mi, 3, replace=F)
r <- P[indexes[1],]
d_e <- P[indexes[2:3],]
M <- r + f*(d_e[2] - d_e[1])
O <- crossover(r, M)
append(H,O)
next_P[i,] <- tournanemt(P[i,], O)
}
P <- next_P
t <- t+1
}
